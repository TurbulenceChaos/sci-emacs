#+Title: Sci-Emacs Test
#+Author: Peng Peng
#+Email: 211110103110@stu.just.edu.cn
#+GitHub: https://github.com/TurbulenceChaos

* Test LaTeX Tikz
#+name: Tikz-styles
#+begin_src latex :eval no
\usetikzlibrary{}
\definecolor{water-blue}{HTML}{569AFF}
\definecolor{light-green}{HTML}{8CC361}
\tikzstyle{Water-blue}=[bottom color=water-blue,top color=white]
#+end_src

Type ~C-c C-c~ to evaluate [[Test-tikz]].

#+name: Test-tikz
#+begin_src latex :file Test-tikz.png
<<Tikz-styles>>
\begin{tikzpicture}[scale=3]
  \def\L{2cm}
  \def\H{1/1.618*2cm}
  \def\Arrow{0.6cm}
  \draw[draw=blue,Water-blue,ultra thick](0,3/4*\H)cos(\L/2,\H/2)sin(\L,\H/4)--(\L,0)--(0,0)--cycle;
  \draw[ultra thick](0,0)rectangle(\L,\H);
  \draw[-stealth,line width=2mm,color=light-green](\L+\Arrow,\H/2)--node[above=4pt,black]{Excitation}++(-\Arrow,0);
  \node at (\L/2,\H/4) {Water};
  \draw[thick,dashed,draw=gray](0,\H/2)--++(\L,0);
  \draw[-latex](\L/2,\H/2)node[below left]{$O$}--++(0.5,0)node[below]{$x$};
  \draw[-latex](\L/2,\H/2)--++(45:0.3)node[above]{$y$};
  \draw[-latex](\L/2,\H/2)--++(0,0.5)node[right]{$z$};
\end{tikzpicture}
#+end_src

#+RESULTS: Test-tikz
:results:
[[file:Test-tikz.png]]
:end:

* Test Jupyter Wolfram Language
#+name: sci-wolfram-import-pkg
#+begin_src jupyter-Wolfram-Language
(* Please run `M-x sci-wolfram-import-pkg` from this line *)
#+end_src

#+name: sci-wolfram-eval-code
#+begin_src jupyter-Wolfram-Language
sol1 = DSolve[{D[y[x, t], t] + 2 D[y[x, t], x] == Sin[x], y[0, t] == 
    Cos[t]}, y[x, t], {x, t}]

sol2 = sol1[[1, 1, 2]]

Plot3D[sol2, {x, -10, 10}, {t, -5, 5}]

MatrixForm[Array[Subscript[a, ##]&, {2, 2, 2}]]
#+end_src

* Test Jupyter Python
#+begin_src jupyter-python
import numpy as np
import matplotlib.pyplot as plt

x = np.arange(0, 2 * np.pi, 0.1)
y = np.sin(x)
plt.plot(x, y)
#+end_src

#+RESULTS:
:results:
| <matplotlib.lines.Line2D | at | 0x7901f6f88e60> |
[[file:./.ob-jupyter/013803fd59e17d59903c3de9dc0a51ec2828bd13.png]]
:end:
